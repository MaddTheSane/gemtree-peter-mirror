
/***************************************************************************\
*																			*
*							3D rozhraní - DirectX 6							*
*																			*
\***************************************************************************/

// --------------------- vypnuto pro MINI verzi --------------------
#ifndef _MINI

/////////////////////////////////////////////////////////////////////////////
// inicializace rozhraní DirectDraw 6 (vrací TRUE=rozhraní je vytvořeno)

bool D3DX6InitDD();
void D3DX6TermDD();

/////////////////////////////////////////////////////////////////////////////
// vytvoření primárniho povrchu, není-li vytvořen (vrací TRUE=OK)

bool D3DX6InitPrim();
void D3DX6TermPrim();

/////////////////////////////////////////////////////////////////////////////
// vytvoření clipperu, není-li vytvořen (vrací TRUE=OK)

bool D3DX6InitClip();
void D3DX6TermClip();

/////////////////////////////////////////////////////////////////////////////
// vytvoření palet, nejsou-li vytvořeny (vrací TRUE=OK)

bool D3DX6InitPal();
void D3DX6TermPal();

/////////////////////////////////////////////////////////////////////////////
// inicializace rozhraní Direct3D 6 (vrací TRUE=rozhraní je vytvořeno)

bool D3DX6InitD3();
void D3DX6TermD3();

/////////////////////////////////////////////////////////////////////////////
// vytvoření renderovacího povrchu, není-li vytvořen (vrací TRUE=OK)

bool D3DX6InitRend(bool hw);
void D3DX6TermRend();

/////////////////////////////////////////////////////////////////////////////
// vytvoření Z-bufferu, není-li vytvořen (vrací TRUE=OK)

bool D3DX6InitZBuf(bool hw, DDPIXELFORMAT* pf);
void D3DX6TermZBuf();

/////////////////////////////////////////////////////////////////////////////
// vytvoření renderovacího zařízení (vrací TRUE=inicializace OK)
// typ zařízení: 1=HAL,2=TnLHal,3=REF,4=RGB,5=MMX,6=Ramp,7=Null

bool D3DX6InitDev(int type);
void D3DX6TermDev();

/////////////////////////////////////////////////////////////////////////////
// aktualizace materiálu pozadí scény

void D3DX6AktBackMat();

/////////////////////////////////////////////////////////////////////////////
// vytvoření materiálu pozadí scény

bool D3DX6InitBack();

/////////////////////////////////////////////////////////////////////////////
// zrušení materiálu pozadí scény

void D3DX6TermBack();

/////////////////////////////////////////////////////////////////////////////
// vytvoření viewportu (vrací TRUE=inicializace OK)

bool D3DX6InitView();
void D3DX6SizeView();
void D3DX6MoveView();
void D3DX6TermView();

/////////////////////////////////////////////////////////////////////////////
// zahájení funkce zařízení (vrací TRUE=inicializace OK)
// typ zařízení: 1=HAL,2=TnLHal,3=REF,4=RGB,5=MMX,6=Ramp,7=Null

bool D3DX6Start(int type);
void D3DX6Stop();

/////////////////////////////////////////////////////////////////////////////
// vymazání renderovací plochy

void D3DX6Clear();

/////////////////////////////////////////////////////////////////////////////
// zobrazení renderovacího bufferu

void D3DX6Disp();

/////////////////////////////////////////////////////////////////////////////
// aktualizace projekční matice

void D3DX6AktProj();

/////////////////////////////////////////////////////////////////////////////
// aktualizace pohledové matice

void D3DX6AktView();

/////////////////////////////////////////////////////////////////////////////
// zahájení renderování scény

void D3DX6Begin();

/////////////////////////////////////////////////////////////////////////////
// ukončení renderování scény

void D3DX6End();

/////////////////////////////////////////////////////////////////////////////
// vyrenderování jednoho objektu

void D3DX6Render(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// resetování objektu před ukončením ovladače

void D3DX6Reset(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// resetování stínu objektu před ukončením ovladače

void D3DX6SReset(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// aktualizovat přepínač vyplňování ploch

void D3DX6AktWireframe();

/////////////////////////////////////////////////////////////////////////////
// aktualizovat přepínač osvětlení

void D3DX6AktLightOn();

/////////////////////////////////////////////////////////////////////////////
// aktualizovat přepínač plynulého stinování

void D3DX6AktShades();

/////////////////////////////////////////////////////////////////////////////
// aktualizovat přepínač odstraňování ploch

void D3DX6AktCulling();

/////////////////////////////////////////////////////////////////////////////
// aktualizovat přepínač filtrace zvětšených textur

void D3DX6AktMagFilter(int stage);

/////////////////////////////////////////////////////////////////////////////
// aktualizovat přepínač filtrace zmenšených a vzdálených textur

void D3DX6AktMinMipFilter(int stage);

/////////////////////////////////////////////////////////////////////////////
// aktualizace položky světla

void D3DX6AktLight(int inx, D3DLITEM* item);

/////////////////////////////////////////////////////////////////////////////
// nastavení materiálu

void D3DX6SetMaterial(D3DMITEM* item);

/////////////////////////////////////////////////////////////////////////////
// resetování položky textury před ukončením ovladače

void D3DX6TextureRes(D3DTITEM* item);

/////////////////////////////////////////////////////////////////////////////
// nastavení a zapnutí textury

void D3DX6TextureSet(D3DTITEM* item, int stage);

/////////////////////////////////////////////////////////////////////////////
// zapnutí původní textury

inline void D3DX6TextureOn(D3DTITEM* item, int stage) { D3DX6TextureSet(item, stage); }

/////////////////////////////////////////////////////////////////////////////
// vypnutí textury

void D3DX6TextureOff(int stage);

/////////////////////////////////////////////////////////////////////////////
// resetování položky materiálu

void D3DX6MatReset(D3DMITEM* item);

/////////////////////////////////////////////////////////////////////////////
// resetování položky světla

void D3DX6LightReset(int inx, D3DLITEM* item);

/////////////////////////////////////////////////////////////////////////////
// aktualizace ambient osvětlení

void D3DX6AktAmbient();

/////////////////////////////////////////////////////////////////////////////
// volná videopaměť

int D3DX6Free();

/////////////////////////////////////////////////////////////////////////////
// aktualizace mlhy

void D3DX6AktFog();

/////////////////////////////////////////////////////////////////////////////
// zapnutí mlhy

void D3DX6FogOn(BOOL on);

/////////////////////////////////////////////////////////////////////////////
// aktualizace stavu

void D3DX6AktState();

/////////////////////////////////////////////////////////////////////////////
// aktualizace blending operací objektu

void D3DX6AktBlend(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// aktualizace referenční úrovně alfa

void D3DX6AktAlfa(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// nastavení operace barev

void D3DX6SetColorOp(int op, int arg1, int arg2, int stage);

/////////////////////////////////////////////////////////////////////////////
// nastavení operace alfa

void D3DX6SetAlphaOp(int op, int arg1, int arg2, int stage);

/////////////////////////////////////////////////////////////////////////////
// nastavení adresování textur

void D3DX6SetAddress(int adru, int adrv, int stage);

/////////////////////////////////////////////////////////////////////////////
// nastavení barvy okolí textur

//void D3DX6SetBorder(D3DFITEM* item, int stage);

/////////////////////////////////////////////////////////////////////////////
// nastavení zjemnění vzdálených textur

void D3DX6SetBias(float bias, int stage);

/////////////////////////////////////////////////////////////////////////////
// aktualizace palet

void D3DX6AktPalette(HWND wnd);

/////////////////////////////////////////////////////////////////////////////
// nastavení barvy faktoru textur

void D3DX6SetTFactor(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// nastavení Z funkce (1 až 8, v kódu DirectX, 0=vypnuto)

void D3DX6SetZFunc(int func);

/////////////////////////////////////////////////////////////////////////////
// nastavení Z zápisu

void D3DX6SetZWrite(BOOL write);

/////////////////////////////////////////////////////////////////////////////
// povolení stencil operací

void D3DX6SEnable(BOOL enable);

/////////////////////////////////////////////////////////////////////////////
// nastavení stencil operací

void D3DX6SetSOp(int fail, int zfail, int zpass);

/////////////////////////////////////////////////////////////////////////////
// nastavení stencil testu

void D3DX6SetSFunc(int func, int ref, DWORD mask);

/////////////////////////////////////////////////////////////////////////////
// nastavení zápisové masky do stencil bufferu

void D3DX6SetSMask(DWORD mask);

/////////////////////////////////////////////////////////////////////////////
// vyrenderování stínu jednoho objektu

void D3DX6Shadow(D3DFITEM* item);

/////////////////////////////////////////////////////////////////////////////
// vykreslení stínů

void D3DX6Shadows();


#endif // _MINI
// --------------------- konec vypnutí pro MINI verzi -------------------
